{"version":3,"sources":["assets/spinner.gif","utils/helpers.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","pages/Quiz.js","pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","name","price","quantity","className","to","alt","src","count","pluralize","class","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","xmlns","width","fill","viewBox","d","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Quiz","questions","questionText","answerOptions","answerText","currentQuestion","setCurrentQuestion","showResult","setShowResult","score","setScore","answerOption","isCorrect","nextQuestion","handleAnswerOptionClick","About","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dcbca130.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.fe07dc5e.gif\";","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button class=\"button\" onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\nexport const RANDOM_PRODUCT = gql`\nquery getrandomProduct {\n  randomProduct {\n    _id\n    name\n    description\n    price\n    quantity\n    image\n  }\n}\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Travel Packages:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any packages yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Continent to Explore:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","\nimport React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"plane\">\n          ✈️\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Your Itinerary</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n        <span role=\"img\" aria-label=\"map\">\n        🗺️\n        </span>\n          You haven't added a package to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Packages</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Error: NOPE</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"Type email here\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"@#%#^@!\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul class=\"nabar\" className=\"flex-row\">\n          <li class=\"nabar\" className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Travel History\n            </Link>\n          </li>\n          <li class=\"nabar\" className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n          <li class=\"navbar\" className=\"mx-1\">\n            <Link to=\"/quiz\">\n              Quiz\n            </Link>\n          </li>\n          <li class=\"navbar\" className=\"mx-1\">\n            <Link to=\"/about\">\n              About Us\n            </Link>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul class=\"navbar\" className=\"flex-row\">\n          <li class=\"navbar\" className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li class=\"navbar\" className=\"mx-1\">\n            <Link to=\"/quiz\">\n              Quiz\n            </Link>\n          </li>\n          <li class=\"navbar\" className=\"mx-1\">\n            <Link to=\"/about\">\n              About Us\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" fill=\"currentColor\" class=\"bi bi-globe\" viewBox=\"0 0 16 16\">\n  <path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z\"/>\n</svg>\n            International Globetrotters\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase! An Agent will be in touch shortly.</h2>\n        <h2>Safe Travels!</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React, { useState, useEffect } from \"react\";\n// import { useMutation } from \"@apollo/client\";\nimport {  Redirect } from \"react-router-dom\";\n// import { useQuery } from '@apollo/client';\n// import { RANDOM_PRODUCT } from \"../utils/queries\";\nimport Jumbotron from '../components/Jumbotron';\n// import Auth from \"../utils/auth\";\n// import { Data, Redirect } from './server/schemas/resolvers';\nfunction Quiz() {\n  const questions = [\n    {\n      questionText:\n        \"What is your ideal climate?\",\n      answerOptions: [\n        { answerText: \"Tropical\"},\n        { answerText: \"Four seasons\"},\n        { answerText: \"70°F year round\"},\n        { answerText: \"Snow\"},\n      ],\n    },\n    {\n      questionText: \"What type of enviornment do you most want to live in?\",\n      answerOptions: [\n        { answerText: \"City\"},\n        { answerText: \"Beach\"},\n        { answerText: \"Mountains\"},\n        { answerText: \"Island\"},\n      ],\n    },\n    {\n      questionText: \"What are your language abilities?\",\n      answerOptions: [\n        { answerText: \"Speak more than 1 langugae\" },\n        { answerText: \"Only speak English\"},\n        { answerText: \"Learning new langauges\" },\n      ],\n    },\n    {\n        questionText: \"What is your favorite dish?\",\n        answerOptions: [\n          { answerText: \"Pizza\" },\n          { answerText: \"Sushi\"},\n          { answerText: \"Pasta\" },\n          { answerText: \"Salad\" },\n        ],\n      },\n      {\n        questionText: \"Which of these would you most likely spend your weekend doing?\",\n        answerOptions: [\n          { answerText: \"Coffee shops\" },\n          { answerText: \"Spa\"},\n          { answerText: \"going to a bar?\"},\n          { answerText: \"Movies\"},\n        ],\n      },\n      {\n        questionText: \"Which of th following are you most passionate about?\",\n        answerOptions: [\n          { answerText: \"Culture\" },\n          { answerText: \"Tradition\"},\n          { answerText: \"Adventure\" },\n          { answerText: \"Art\" },\n        ],\n      },\n      {\n        questionText: \"What's the perfect way to spend a day?\",\n        answerOptions: [\n          { answerText: \"Site seeing\"},\n          { answerText: \"Kayaking\"},\n          { answerText: \"Visiting a Winery\" },\n          { answerText: \"Shopping\" },\n        ],\n      },\n      {\n        questionText: \"Why do you like to travel?\",\n        answerOptions: [\n          { answerText: \"Escape responsibilities\" },\n          { answerText: \"See nature's beauties\"},\n          { answerText: \"Create memories with family/friends\" },\n          { answerText: \"Learn new cultures\" },\n        ],\n      },\n    {\n      questionText: \"Is having acess to high speed internet important to you?\",\n      answerOptions: [\n        { answerText: \"Yes\"},\n        { answerText: \"No\"},\n      ],\n    },\n  ];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [score, setScore] = useState(0);\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowResult(true);\n    }\n  };\n  // function resultLink() {\n  //   const { data } = (RANDOM_PRODUCT);\n  //   let randomProduct;\n  //   if ( data ) {\n  //     randomProduct = data.randomProduct._id;\n  //   }\n  // }\n  useEffect(() => {\n  if (setShowResult) {\n    setTimeout(() =>\n     3000);\n  }})\n  return (\n    <div className=\"app\">\n      {showResult ? (\n         <Jumbotron>\n           <div className=\"score-section\">\n          <h2>Thank you for completing the Questionaire.</h2>\n          <h2>You will be routed to a destination shortly.</h2>\n          <h2>Safe Travels!</h2>\n          <Redirect to=\"/products/6272f58dcb1ee55f286b224b\" />\n        </div>\n        </Jumbotron>\n      ) : (\n        <>\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">\n              {questions[currentQuestion].questionText}\n            </div>\n          </div>\n          <div className=\"answer-section\">\n            {questions[currentQuestion].answerOptions.map((answerOption) => (\n              <button\n                onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}\n              >\n                {answerOption.answerText}\n              </button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\nexport default Quiz;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction About() {\n  return (\n    <section class=\"about\">\n      <h1 id=\"about\">About Us</h1>\n      <p>\n        We are International GlobeTrotters. We are travel expert and adventurers who\n        have compiled many years of expertise to arrange the top most see travel\n        destinations. Whether you enjoy the warm weather in Florida, the busy\n        streets of London, or even freezing cold temperatures at the South Pole,\n        we are able to set you up with the best travel package fit for you…\n        but it might cost you an arm and leg\n\n        <br></br>\n        Not sure where to travel to? We’ve developed a quiz to help narrow you\n        down to a good destination. Just answer the questions and we’ll\n        recommend an exotic locale for you to visit.\n\n        <br></br>\n        Enjoy!\n      </p>\n    </section>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Quiz from './pages/Quiz';\nimport About from './pages/About';\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route exact path=\"/quiz\" component={Quiz} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}